/* Define color variables for Light Mode (Default) */
:root {
    --bg-color: #ffffff; /* White background */
    --text-color: #212529; /* Dark text (Bootstrap default) */
    --card-bg: #ffffff; /* White card background */
    --card-border: #dee2e6; /* Light gray border (Bootstrap default) */
    --input-bg: #ffffff;
    --input-border: #ced4da;
    /* Add more variables as needed: links, accents, etc. */
  }
  
  /* Define color variable overrides for Dark Mode */
  /* We use the data-bs-theme attribute on the <html> tag, which Bootstrap 5 uses */
  [data-bs-theme="dark"] {
    --bg-color: #212529; /* Dark background */
    --text-color: #f8f9fa; /* Light text (Bootstrap default dark) */
    --card-bg: #343a40; /* Darker gray card background */
    --card-border: #495057; /* Slightly lighter gray border */
    --input-bg: #495057; /* Dark input background */
    --input-border: #6c757d;
    /* Override other variables as needed */
  }
  
  /* Apply the variables to elements */
  body {
    background-color: var(--bg-color);
    color: var(--text-color);
    padding-top: 20px; /* Keep existing padding */
    transition: background-color 0.3s ease, color 0.3s ease; /* Smooth transition */
  }
  
  h1, h2, h3, h4, h5, h6 {
    color: var(--text-color); /* Ensure headings also use the variable */
  }
  
  /* Style list group items using variables */
  .list-group-item {
    background-color: var(--card-bg);
    border-color: var(--card-border);
    color: var(--text-color); /* Ensure text inside items uses variable */
    transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease; /* Smooth transition */
  }
  
  /* Custom styles for task items (keep existing layout) */
  .task-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
  }
  
  /* Style form inputs using variables */
  /* Note: Bootstrap's data-bs-theme handles most of this, but explicit overrides can help */
  .form-control {
      background-color: var(--input-bg);
      color: var(--text-color);
      border-color: var(--input-border);
  }
  .form-control::placeholder { /* Style placeholder text */
      color: #6c757d; /* Default gray, adjust if needed */
  }
  [data-bs-theme="dark"] .form-control::placeholder {
      color: #adb5bd; /* Lighter gray for dark mode */
  }
  
  /* Ensure modal uses theme (Bootstrap should handle this with data-bs-theme on html) */
  /* .modal-content {
    background-color: var(--card-bg);
    color: var(--text-color);
  }
  .modal-header, .modal-footer {
    border-color: var(--card-border);
  } */
  /* Generally, let Bootstrap handle modal theming via data-bs-theme first */

  /* Add this rule to the end of the file */

.task-item.task-completed .task-text {
  text-decoration: line-through;
  color: #6c757d; /* Bootstrap's secondary text color (gray) */
  /* Optional: Faded color in dark mode */
  /* [data-bs-theme="dark"] & {
      color: #adb5bd;
  } */
}

/* Ensure checkbox stays aligned */
.task-item .form-check-input {
    margin-top: 0.1em; /* Adjust slightly if needed */
}
[data-bs-theme="dark"] .task-item.task-completed .task-text {
  color: #adb5bd; /* Lighter gray for dark mode (Bootstrap's default muted text) */
}

/* --- Animation Keyframes --- */

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px); /* Optional: Slight slide down */
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: scaleY(1); /* Start at normal scale */
    max-height: 100px; /* Adjust if task items can be taller */
  }
  to {
    opacity: 0;
    transform: scaleY(0.8); /* Optional: Slight shrink */
    max-height: 0;
    margin-bottom: 0; /* Remove margin during fade out */
    padding-top: 0;   /* Remove padding */
    padding-bottom: 0;
    border-width: 0;  /* Remove borders */
  }
}

/* --- Animation Classes --- */

.task-item.task-fade-in {
  animation: fadeIn 0.4s ease-out forwards;
}

.task-item.task-fade-out {
  animation: fadeOut 0.4s ease-in forwards;
  /* Adjust timing for smoother visuals if needed */
  transition: margin-bottom 0.4s ease-in, padding 0.4s ease-in; /* Ensure margin/padding transitions match animation */
}

/* Ensure the container collapses nicely when items fade out */
#taskList {
    overflow: hidden; /* Prevent content spill during animation */
}

/* Make sure the task-item itself handles transitions if properties are changed directly */
.task-item {
    /* ... keep existing styles ... */
    transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease; /* Existing theme transitions */
     overflow: hidden; /* Important for controlling height/padding animations */
}